<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.newer.dao.ShoesMapper" >
  <resultMap id="BaseResultMap" type="com.newer.domain.Shoes" >
    <id column="SHOESID" property="shoesid" jdbcType="DECIMAL" />
    <result column="SHOESNAME" property="shoesname" jdbcType="VARCHAR" />
    <result column="PRICE" property="price" jdbcType="DECIMAL" />
    <result column="INTRODUCE" property="introduce" jdbcType="VARCHAR" />
    <result column="DETAIL" property="detail" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="IMAGE" property="image" jdbcType="VARCHAR" />
    <result column="PURCHASINGPRICE" property="purchasingprice" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    SHOESID, SHOESNAME, PRICE, INTRODUCE, DETAIL, STATUS, IMAGE, PURCHASINGPRICE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.newer.domain.ShoesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SHOES
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.math.BigDecimal" >
    select 
    <include refid="Base_Column_List" />
    from SHOES
    where SHOESID = #{shoesid,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal" >
    delete from SHOES
    where SHOESID = #{shoesid,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" parameterType="com.newer.domain.Shoes" >
    insert into SHOES (SHOESID, SHOESNAME, PRICE, 
      INTRODUCE, DETAIL, STATUS, 
      IMAGE, PURCHASINGPRICE)
    values (#{shoesid,jdbcType=DECIMAL}, #{shoesname,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{introduce,jdbcType=VARCHAR}, #{detail,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{image,jdbcType=VARCHAR}, #{purchasingprice,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.newer.domain.Shoes" >
    insert into SHOES
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="shoesid != null" >
        SHOESID,
      </if>
      <if test="shoesname != null" >
        SHOESNAME,
      </if>
      <if test="price != null" >
        PRICE,
      </if>
      <if test="introduce != null" >
        INTRODUCE,
      </if>
      <if test="detail != null" >
        DETAIL,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="image != null" >
        IMAGE,
      </if>
      <if test="purchasingprice != null" >
        PURCHASINGPRICE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="shoesid != null" >
        #{shoesid,jdbcType=DECIMAL},
      </if>
      <if test="shoesname != null" >
        #{shoesname,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="introduce != null" >
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="image != null" >
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="purchasingprice != null" >
        #{purchasingprice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.newer.domain.Shoes" >
    update SHOES
    <set >
      <if test="shoesname != null" >
        SHOESNAME = #{shoesname,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        PRICE = #{price,jdbcType=DECIMAL},
      </if>
      <if test="introduce != null" >
        INTRODUCE = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        DETAIL = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="image != null" >
        IMAGE = #{image,jdbcType=VARCHAR},
      </if>
      <if test="purchasingprice != null" >
        PURCHASINGPRICE = #{purchasingprice,jdbcType=DECIMAL},
      </if>
    </set>
    where SHOESID = #{shoesid,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.newer.domain.Shoes" >
    update SHOES
    set SHOESNAME = #{shoesname,jdbcType=VARCHAR},
      PRICE = #{price,jdbcType=DECIMAL},
      INTRODUCE = #{introduce,jdbcType=VARCHAR},
      DETAIL = #{detail,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      IMAGE = #{image,jdbcType=VARCHAR},
      PURCHASINGPRICE = #{purchasingprice,jdbcType=DECIMAL}
    where SHOESID = #{shoesid,jdbcType=DECIMAL}
  </update>
</mapper>